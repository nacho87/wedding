/*
 * Custom group of mixing to allow use rem or pixel in the
 * fontSize mixing.
 */
@function fromRemToPixel( $rem ){
  $rem: $rem / ($rem * 0 + 1);
  @return #{$rem * 16}px;
}
@function fromPixelToRem( $pixel ){
  @return #{$pixel / 16px}rem;
}

@function typeOfUnit( $size ){
  $unit: str-slice(#{$size}, -3);
  $unit: to-lower-case($unit);

  @if  $unit != 'rem' {
    $unit: str-slice(#{$size}, -2);
    $unit: to-lower-case($unit);
  }
  @return $unit;
}

@mixin fontSizeFromPixel( $pixelSize ){
  font-size: $pixelSize;
  font-size: fromPixelToRem( $pixelSize );
}

@mixin fontSizeFromRem( $remSize ){
  font-size: fromRemToPixel( $remSize );
  font-size: $remSize;
}

@mixin fontSize($size) {

  $unit: typeOfUnit( $size );

  @if $unit == 'px' {
    @include fontSizeFromPixel($size);
  } @else if( $unit == 'rem' ) {
    @include fontSizeFromRem($size);
  }
}

/* =Typography
-------------------------------------------------------------- */
html {
  font-size: 100%;
}

body {
  @include fontSize(20px);
}
h1, h2, h3, h4, h5, h6 {
  @include clearfix;
  clear: both;
  float: none;
  line-height: 1.25;
  margin-bottom: 20px;
  text-transform: uppercase;

  a, a:visited {
    text-decoration: none;
  }
}
h1 {
  @include fontSize(75px);
  color: #000;
  font-family: $title;
}
h2 {
  @include fontSize(50px);
  font-family: $title;
}
h3 {
  @include fontSize(35px);
  font-family: $title;
}
h4 {
  @include fontSize(24px);
  font-family: $title;
}
h5 {
  @include fontSize(20px);
  font-family: $title;
}
h6 {
  @include fontSize(18px);
  font-family: $title;
}
blockquote {
  background-color: #f9f9f9;
  border-left: solid 5px $secondary-color;
  font-style: italic;
  padding: 20px;
}
cite {
  font-style: italic;
}
strong, b {
  @include fontSize(20px);
  color: #000;
  font-family: $title;
}
a {
  color: $link-color;
  text-decoration: none;
}
ul {
  @extend %default-ul; // Adds browser default spacing back
}
ol {
  @extend %default-ol; // Adds browser default spacing back
}
